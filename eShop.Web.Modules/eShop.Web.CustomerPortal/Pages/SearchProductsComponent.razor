
@page "/products"

@inject ISearchProductUseCase searchProductUseCase

<h3>Search Products</h3>
<br/>

<SearchBarComponent OnSearch="HandleSearch"></SearchBarComponent>

<br/>



@if( products != null && products.Count() > 0 )
{
<div class="row">
    @foreach ( var product in products )
    {
        <ProductCardComponent Product="product"></ProductCardComponent>
    }
</div>
    
}
else
{
    <p>No products found.</p>
}







@*<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Brand
            </th>
            <th>
                Price
            </th>
        </tr>
    </thead>
    <tbody>
        @if (products != null && products.Count() > 0)
        {
            @foreach (var product in products)
            {
                <ProductItemComponent Product="product"></ProductItemComponent>
            }
        }
        else
        {
            <tr>
                <td colspan="3">
                    Cannot find products
                </td>
            </tr>
        }
    </tbody>
</table>*@

@code {

    private IEnumerable<Product> products;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        products = searchProductUseCase.Execute();
    }

    private void HandleSearch(string filter)
    {
        products = searchProductUseCase.Execute(filter);
    }

}
